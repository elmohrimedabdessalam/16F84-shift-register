

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Mon Jun 27 17:44:34 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F84
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x4E,2
    17  0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F84 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  0081                     	;# 
    65  0085                     	;# 
    66  0086                     	;# 
    67  0088                     	;# 
    68  0089                     	;# 
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0088                     	;# 
    84  0089                     	;# 
    85                           
    86                           	psect	idataBANK0
    87  00C9                     __pidataBANK0:
    88                           
    89                           ;initializer for _ris
    90  00C9  3401               	retlw	1
    91                           
    92                           	psect	nvBANK0
    93  0024                     __pnvBANK0:
    94  0024                     _byte:
    95  0024                     	ds	1
    96  0025                     _transmit_byte:
    97  0025                     	ds	1
    98  0001                     _TMR0	set	1
    99  0005                     _PORTAbits	set	5
   100  000B                     _INTCONbits	set	11
   101  002A                     _RA2	set	42
   102  0029                     _RA1	set	41
   103  0028                     _RA0	set	40
   104  0081                     _OPTION_REGbits	set	129
   105  042A                     _TRISA2	set	1066
   106  0429                     _TRISA1	set	1065
   107  0428                     _TRISA0	set	1064
   108                           
   109                           	psect	cinit
   110  000E                     start_initialization:	
   111                           ; #config settings
   112                           
   113  000E                     __initialization:
   114                           
   115                           ; Initialize objects allocated to BANK0
   116  000E  20C9               	fcall	__pidataBANK0	;fetch initializer
   117  000F  00A6               	movwf	__pdataBANK0& (0+127)
   118                           
   119                           ; Clear objects allocated to BANK0
   120  0010  1383               	bcf	3,7	;select IRP bank0
   121  0011  300C               	movlw	low __pbssBANK0
   122  0012  0084               	movwf	4
   123  0013  3018               	movlw	low (__pbssBANK0+12)
   124  0014  20C1               	fcall	clear_ram0
   125  0015                     end_of_initialization:	
   126                           ;End of C runtime variable initialization code
   127                           
   128  0015                     __end_of__initialization:
   129  0015  0183               	clrf	3
   130  0016  2881               	ljmp	_main	;jump to C main() function
   131                           
   132                           	psect	bssBANK0
   133  000C                     __pbssBANK0:
   134  000C                     _time:
   135  000C                     	ds	4
   136  0010                     _millis:
   137  0010                     	ds	4
   138  0014                     _bit_counter:
   139  0014                     	ds	2
   140  0016                     _i:
   141  0016                     	ds	1
   142  0017                     _MVT:
   143  0017                     	ds	1
   144                           
   145                           	psect	dataBANK0
   146  0026                     __pdataBANK0:
   147  0026                     _ris:
   148  0026                     	ds	1
   149                           
   150                           	psect	clrtext
   151  00C1                     clear_ram0:	
   152                           ;	Called with FSR containing the base address, and
   153                           ;	W with the last address+1
   154                           
   155  00C1  0064               	clrwdt	;clear the watchdog before getting into this loop
   156  00C2                     clrloop0:
   157  00C2  0180               	clrf	0	;clear RAM location pointed to by FSR
   158  00C3  0A84               	incf	4,f	;increment pointer
   159  00C4  0604               	xorwf	4,w	;XOR with final address
   160  00C5  1903               	btfsc	3,2	;have we reached the end yet?
   161  00C6  3400               	retlw	0	;all done for this memory range, return
   162  00C7  0604               	xorwf	4,w	;XOR again to restore value
   163  00C8  28C2               	goto	clrloop0	;do the next byte
   164                           
   165                           	psect	cstackBANK0
   166  0018                     __pcstackBANK0:
   167  0018                     ?_my_ISR:
   168  0018                     ??_my_ISR:	
   169                           ; 1 bytes @ 0x0
   170                           
   171  0018                     ?_main:	
   172                           ; 1 bytes @ 0x0
   173                           
   174                           
   175                           ; 1 bytes @ 0x0
   176  0018                     	ds	9
   177  0021                     ??_main:
   178                           
   179                           ; 1 bytes @ 0x9
   180  0021                     	ds	3
   181                           
   182                           	psect	maintext
   183  0081                     __pmaintext:	
   184 ;;
   185 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   186 ;;
   187 ;; *************** function _main *****************
   188 ;; Defined at:
   189 ;;		line 64 in file "newmain.c"
   190 ;; Parameters:    Size  Location     Type
   191 ;;		None
   192 ;; Auto vars:     Size  Location     Type
   193 ;;		None
   194 ;; Return value:  Size  Location     Type
   195 ;;                  1    wreg      void 
   196 ;; Registers used:
   197 ;;		wreg
   198 ;; Tracked objects:
   199 ;;		On entry : B00/0
   200 ;;		On exit  : 0/0
   201 ;;		Unchanged: 0/0
   202 ;; Data sizes:     COMMON   BANK0
   203 ;;      Params:         0       0
   204 ;;      Locals:         0       0
   205 ;;      Temps:          0       3
   206 ;;      Totals:         0       3
   207 ;;Total ram usage:        3 bytes
   208 ;; Hardware stack levels required when called: 1
   209 ;; This function calls:
   210 ;;		Nothing
   211 ;; This function is called by:
   212 ;;		Startup code after reset
   213 ;; This function uses a non-reentrant model
   214 ;;
   215                           
   216  0081                     _main:	
   217                           ;psect for function _main
   218                           
   219  0081                     l712:	
   220                           ;incstack = 0
   221                           ; Regs used in _main: [wreg]
   222                           
   223                           
   224                           ;newmain.c: 67:   OPTION_REGbits.PS2 = 0;
   225  0081  1683               	bsf	3,5	;RP0=1, select bank1
   226  0082  1005               	bcf	5,0	;volatile
   227                           
   228                           ;newmain.c: 68: 
   229  0083  1085               	bcf	5,1	;volatile
   230                           
   231                           ;newmain.c: 69:   RA0 = 1;
   232  0084  1105               	bcf	5,2	;volatile
   233                           
   234                           ;newmain.c: 71:   RA2 = 0;
   235  0085  178B               	bsf	11,7	;volatile
   236                           
   237                           ;newmain.c: 74: 
   238  0086  168B               	bsf	11,5	;volatile
   239                           
   240                           ;newmain.c: 75: 
   241  0087  110B               	bcf	11,2	;volatile
   242                           
   243                           ;newmain.c: 76:   while(1)
   244  0088  120B               	bcf	11,4	;volatile
   245                           
   246                           ;newmain.c: 77:     {
   247  0089  108B               	bcf	11,1	;volatile
   248                           
   249                           ;newmain.c: 79:      transmit_byte = 1;
   250  008A  1281               	bcf	1,5	;volatile
   251                           
   252                           ;newmain.c: 80:      _delay((unsigned long)((500)*(8000000UL/4000.0)));
   253  008B  1201               	bcf	1,4	;volatile
   254                           
   255                           ;newmain.c: 81:      byte >>= 1;
   256  008C  1701               	bsf	1,6	;volatile
   257                           
   258                           ;newmain.c: 82:      transmit_byte = 1;
   259  008D  1181               	bcf	1,3	;volatile
   260                           
   261                           ;newmain.c: 83:      _delay((unsigned long)((500)*(8000000UL/4000.0)));
   262  008E  1001               	bcf	1,0	;volatile
   263                           
   264                           ;newmain.c: 84:     }
   265  008F  1481               	bsf	1,1	;volatile
   266                           
   267                           ;newmain.c: 85: }
   268  0090  1101               	bcf	1,2	;volatile
   269  0091  1283               	bcf	3,5	;RP0=0, select bank0
   270  0092  1405               	bsf	5,0	;volatile
   271  0093  1085               	bcf	5,1	;volatile
   272  0094  1105               	bcf	5,2	;volatile
   273  0095                     l714:
   274  0095  30AA               	movlw	170
   275  0096  1283               	bcf	3,5	;RP0=0, select bank0
   276  0097  00A1               	movwf	??_main
   277  0098  0821               	movf	??_main,w
   278  0099  00A4               	movwf	_byte	;volatile
   279  009A  3001               	movlw	1
   280  009B  00A1               	movwf	??_main
   281  009C  0821               	movf	??_main,w
   282  009D  00A5               	movwf	_transmit_byte	;volatile
   283  009E  3006               	movlw	6
   284  009F  00A3               	movwf	??_main+2
   285  00A0  3013               	movlw	19
   286  00A1  00A2               	movwf	??_main+1
   287  00A2  30AD               	movlw	173
   288  00A3  00A1               	movwf	??_main
   289  00A4                     u177:
   290  00A4  0BA1               	decfsz	??_main,f
   291  00A5  28A4               	goto	u177
   292  00A6  0BA2               	decfsz	??_main+1,f
   293  00A7  28A4               	goto	u177
   294  00A8  0BA3               	decfsz	??_main+2,f
   295  00A9  28A4               	goto	u177
   296  00AA  28AB               	nop2
   297  00AB  1003               	clrc
   298  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   299  00AD  0CA4               	rrf	_byte,f	;volatile
   300  00AE  3001               	movlw	1
   301  00AF  00A1               	movwf	??_main
   302  00B0  0821               	movf	??_main,w
   303  00B1  00A5               	movwf	_transmit_byte	;volatile
   304  00B2  3006               	movlw	6
   305  00B3  00A3               	movwf	??_main+2
   306  00B4  3013               	movlw	19
   307  00B5  00A2               	movwf	??_main+1
   308  00B6  30AD               	movlw	173
   309  00B7  00A1               	movwf	??_main
   310  00B8                     u187:
   311  00B8  0BA1               	decfsz	??_main,f
   312  00B9  28B8               	goto	u187
   313  00BA  0BA2               	decfsz	??_main+1,f
   314  00BB  28B8               	goto	u187
   315  00BC  0BA3               	decfsz	??_main+2,f
   316  00BD  28B8               	goto	u187
   317  00BE  28BF               	nop2
   318  00BF  2895               	goto	l714
   319  00C0  280D               	ljmp	start
   320  00C1                     __end_of_main:
   321                           
   322                           	psect	text1
   323  0017                     __ptext1:	
   324 ;; *************** function _my_ISR *****************
   325 ;; Defined at:
   326 ;;		line 25 in file "newmain.c"
   327 ;; Parameters:    Size  Location     Type
   328 ;;		None
   329 ;; Auto vars:     Size  Location     Type
   330 ;;		None
   331 ;; Return value:  Size  Location     Type
   332 ;;                  1    wreg      void 
   333 ;; Registers used:
   334 ;;		wreg, status,2, status,0, btemp+1
   335 ;; Tracked objects:
   336 ;;		On entry : 0/0
   337 ;;		On exit  : 0/0
   338 ;;		Unchanged: 0/0
   339 ;; Data sizes:     COMMON   BANK0
   340 ;;      Params:         0       0
   341 ;;      Locals:         0       0
   342 ;;      Temps:          0       9
   343 ;;      Totals:         0       9
   344 ;;Total ram usage:        9 bytes
   345 ;; Hardware stack levels used: 1
   346 ;; This function calls:
   347 ;;		Nothing
   348 ;; This function is called by:
   349 ;;		Interrupt level 1
   350 ;; This function uses a non-reentrant model
   351 ;;
   352                           
   353  0017                     _my_ISR:	
   354                           ;psect for function _my_ISR
   355                           
   356  0017                     i1l684:
   357                           
   358                           ;newmain.c: 28:                 {
   359  0017  1D0B               	btfss	11,2	;volatile
   360  0018  281A               	goto	u9_21
   361  0019  281B               	goto	u9_20
   362  001A                     u9_21:
   363  001A  2879               	goto	i1l52
   364  001B                     u9_20:
   365  001B                     i1l686:
   366                           
   367                           ;newmain.c: 29:                     PORTAbits.RA1 = 0;;newmain.c: 30:                   
      +                            PORTAbits.RA2 = 1;
   368  001B  110B               	bcf	11,2	;volatile
   369  001C                     i1l688:
   370                           
   371                           ;newmain.c: 31:                 }
   372  001C  0325               	decf	_transmit_byte,w	;volatile
   373  001D  1D03               	btfss	3,2
   374  001E  2820               	goto	u10_21
   375  001F  2821               	goto	u10_20
   376  0020                     u10_21:
   377  0020  2877               	goto	i1l710
   378  0021                     u10_20:
   379  0021                     i1l690:
   380                           
   381                           ;newmain.c: 32:                 else;newmain.c: 33:                 {
   382  0021  3001               	movlw	1
   383  0022  0685               	xorwf	5,f
   384  0023                     i1l692:
   385                           
   386                           ;newmain.c: 34:                     PORTAbits.RA2 = 0;
   387  0023  1805               	btfsc	5,0	;volatile
   388  0024  2826               	goto	u11_21
   389  0025  2827               	goto	u11_20
   390  0026                     u11_21:
   391  0026  2877               	goto	i1l710
   392  0027                     u11_20:
   393  0027                     i1l694:
   394                           
   395                           ;newmain.c: 35: 
   396  0027  0815               	movf	_bit_counter+1,w	;volatile
   397  0028  3A80               	xorlw	128
   398  0029  00CF               	movwf	btemp+1
   399  002A  3080               	movlw	128
   400  002B  024F               	subwf	btemp+1,w
   401  002C  1D03               	skipz
   402  002D  2830               	goto	u12_25
   403  002E  3008               	movlw	8
   404  002F  0214               	subwf	_bit_counter,w	;volatile
   405  0030                     u12_25:
   406  0030  1803               	skipnc
   407  0031  2833               	goto	u12_21
   408  0032  2834               	goto	u12_20
   409  0033                     u12_21:
   410  0033  2860               	goto	i1l700
   411  0034                     u12_20:
   412  0034                     i1l696:
   413                           
   414                           ;newmain.c: 36:                     bit_counter = -1;
   415  0034  1283               	bcf	3,5	;RP0=0, select bank0
   416  0035  0814               	movf	_bit_counter,w	;volatile
   417  0036  3C07               	sublw	7
   418  0037  0098               	movwf	??_my_ISR
   419  0038  0A98               	incf	??_my_ISR,f
   420  0039  3001               	movlw	1
   421  003A  0099               	movwf	??_my_ISR+1
   422  003B  3000               	movlw	0
   423  003C  009A               	movwf	??_my_ISR+2
   424  003D  2841               	goto	u13_24
   425  003E                     u13_25:
   426  003E  1003               	clrc
   427  003F  0D99               	rlf	??_my_ISR+1,f
   428  0040  0D9A               	rlf	??_my_ISR+2,f
   429  0041                     u13_24:
   430  0041  0B98               	decfsz	??_my_ISR,f
   431  0042  283E               	goto	u13_25
   432  0043  3001               	movlw	1
   433  0044  009B               	movwf	??_my_ISR+3
   434  0045  0814               	movf	_bit_counter,w	;volatile
   435  0046  3C07               	sublw	7
   436  0047  3E01               	addlw	1
   437  0048  284B               	goto	u14_24
   438  0049                     u14_25:
   439  0049  1003               	clrc
   440  004A  0D9B               	rlf	??_my_ISR+3,f
   441  004B                     u14_24:
   442  004B  3EFF               	addlw	-1
   443  004C  1D03               	skipz
   444  004D  2849               	goto	u14_25
   445  004E  081B               	movf	??_my_ISR+3,w
   446  004F  0524               	andwf	_byte,w	;volatile
   447  0050  009C               	movwf	??_my_ISR+4
   448  0051  019D               	clrf	??_my_ISR+5
   449  0052  081A               	movf	??_my_ISR+2,w
   450  0053  061D               	xorwf	??_my_ISR+5,w
   451  0054  1D03               	skipz
   452  0055  2858               	goto	u15_25
   453  0056  0819               	movf	??_my_ISR+1,w
   454  0057  061C               	xorwf	??_my_ISR+4,w
   455  0058                     u15_25:
   456  0058  1D03               	skipz
   457  0059  285B               	goto	u15_21
   458  005A  285C               	goto	u15_20
   459  005B                     u15_21:
   460  005B  285E               	goto	i1l47
   461  005C                     u15_20:
   462  005C                     i1l698:
   463                           
   464                           ;newmain.c: 37:                     transmit_byte = 0;;newmain.c: 38:                 }
   465  005C  1485               	bsf	5,1	;volatile
   466                           
   467                           ;newmain.c: 39:                 bit_counter++;
   468  005D  2871               	goto	i1l708
   469  005E                     i1l47:	
   470                           ;newmain.c: 40:             }
   471                           
   472                           
   473                           ;newmain.c: 41:         };newmain.c: 42:         TMR0 = 6;
   474  005E  1085               	bcf	5,1	;volatile
   475  005F  2871               	goto	i1l708
   476  0060                     i1l700:
   477  0060  3008               	movlw	8
   478  0061  1283               	bcf	3,5	;RP0=0, select bank0
   479  0062  0614               	xorwf	_bit_counter,w	;volatile
   480  0063  0415               	iorwf	_bit_counter+1,w	;volatile
   481  0064  1D03               	btfss	3,2
   482  0065  2867               	goto	u16_21
   483  0066  2868               	goto	u16_20
   484  0067                     u16_21:
   485  0067  286B               	goto	i1l50
   486  0068                     u16_20:
   487  0068                     i1l702:
   488                           
   489                           ;newmain.c: 46: void main();newmain.c: 47: {
   490  0068  1085               	bcf	5,1	;volatile
   491                           
   492                           ;newmain.c: 48: 
   493  0069  1505               	bsf	5,2	;volatile
   494                           
   495                           ;newmain.c: 49:   TRISA0 = 0;
   496  006A  2871               	goto	i1l708
   497  006B                     i1l50:	
   498                           ;newmain.c: 50:   TRISA1 = 0;
   499                           
   500                           
   501                           ;newmain.c: 51:   TRISA2 = 0;;newmain.c: 52: 
   502  006B  1105               	bcf	5,2	;volatile
   503  006C                     i1l704:
   504                           
   505                           ;newmain.c: 54: 
   506  006C  30FF               	movlw	255
   507  006D  0094               	movwf	_bit_counter	;volatile
   508  006E  30FF               	movlw	255
   509  006F  0095               	movwf	_bit_counter+1	;volatile
   510  0070                     i1l706:
   511                           
   512                           ;newmain.c: 55: 
   513  0070  01A5               	clrf	_transmit_byte	;volatile
   514  0071                     i1l708:
   515                           
   516                           ;newmain.c: 57:   INTCONbits.T0IF = 0;
   517  0071  3001               	movlw	1
   518  0072  0794               	addwf	_bit_counter,f	;volatile
   519  0073  1803               	skipnc
   520  0074  0A95               	incf	_bit_counter+1,f	;volatile
   521  0075  3000               	movlw	0
   522  0076  0795               	addwf	_bit_counter+1,f	;volatile
   523  0077                     i1l710:
   524                           
   525                           ;newmain.c: 60: 
   526  0077  3006               	movlw	6
   527  0078  0081               	movwf	1	;volatile
   528  0079                     i1l52:
   529  0079  0820               	movf	??_my_ISR+8,w
   530  007A  081F               	movf	??_my_ISR+7,w
   531  007B  008A               	movwf	10
   532  007C  0E1E               	swapf	??_my_ISR+6,w
   533  007D  0083               	movwf	3
   534  007E  0ECE               	swapf	btemp,f
   535  007F  0E4E               	swapf	btemp,w
   536  0080  0009               	retfie
   537  0081                     __end_of_my_ISR:
   538  004E                     btemp	set	78	;btemp
   539  004E                     wtemp0	set	78
   540                           
   541                           	psect	intentry
   542  0004                     __pintentry:	
   543                           ;incstack = 0
   544                           ; Regs used in _my_ISR: [wreg+status,2+status,0+btemp+1]
   545                           
   546  0004                     interrupt_function:
   547  004E                     saved_w	set	btemp
   548  0004  00CE               	movwf	btemp
   549  0005  0E03               	swapf	3,w
   550  0006  1283               	bcf	3,5	;RP0=0, select bank0
   551  0007  009E               	movwf	??_my_ISR+6
   552  0008  080A               	movf	10,w
   553  0009  009F               	movwf	??_my_ISR+7
   554  000A  084F               	movf	btemp+1,w
   555  000B  00A0               	movwf	??_my_ISR+8
   556  000C  2817               	ljmp	_my_ISR
   557                           
   558                           	psect	idloc
   559                           
   560                           ;Config register IDLOC0 @ 0x2000
   561                           ;	unspecified, using default values
   562  2000                     	org	8192
   563  2000  3FFF               	dw	16383
   564                           
   565                           ;Config register IDLOC1 @ 0x2001
   566                           ;	unspecified, using default values
   567  2001                     	org	8193
   568  2001  3FFF               	dw	16383
   569                           
   570                           ;Config register IDLOC2 @ 0x2002
   571                           ;	unspecified, using default values
   572  2002                     	org	8194
   573  2002  3FFF               	dw	16383
   574                           
   575                           ;Config register IDLOC3 @ 0x2003
   576                           ;	unspecified, using default values
   577  2003                     	org	8195
   578  2003  3FFF               	dw	16383
   579                           
   580                           	psect	config
   581                           
   582                           ;Config register CONFIG @ 0x2007
   583                           ;	Oscillator Selection bits
   584                           ;	FOSC = HS, HS oscillator
   585                           ;	Watchdog Timer
   586                           ;	WDTE = OFF, WDT disabled
   587                           ;	Power-up Timer Enable bit
   588                           ;	PWRTE = OFF, Power-up Timer is disabled
   589                           ;	Code Protection bit
   590                           ;	CP = OFF, Code protection disabled
   591  2007                     	org	8199
   592  2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         12
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66     12      27

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _my_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _my_ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              9 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _my_ISR                                               9     9      0       0
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _my_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               42      C      1B       3       40.9%
BITBANK0            42      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1B       6        0.0%
ABS                  0      0      1B       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              40      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Mon Jun 27 17:44:34 2022

                      _i 0016                       fsr 0004                      l712 0081  
                    l714 0095                      _RA0 0028                      _RA1 0029  
                    _RA2 002A                      u177 00A4                      u187 00B8  
                    _MVT 0017                      _ris 0026                      indf 0000  
                   i1l50 006B                     i1l52 0079                     i1l47 005E  
                   _TMR0 0001                     u9_20 001B                     u9_21 001A  
                   _main 0081                     _byte 0024                     _time 000C  
                   btemp 004E                     start 000D                    ?_main 0018  
                  i1l700 0060                    i1l702 0068                    i1l710 0077  
                  i1l704 006C                    i1l706 0070                    i1l708 0071  
                  i1l690 0021                    i1l692 0023                    i1l684 0017  
                  i1l694 0027                    i1l686 001B                    i1l696 0034  
                  i1l688 001C                    i1l698 005C                    u10_20 0021  
                  u10_21 0020                    u11_20 0027                    u11_21 0026  
                  u12_20 0034                    u12_21 0033                    u12_25 0030  
                  u13_24 0041                    u13_25 003E                    u14_24 004B  
                  u14_25 0049                    u15_20 005C                    u15_21 005B  
                  u15_25 0058                    u16_20 0068                    u16_21 0067  
          _transmit_byte 0025                    pclath 000A                    status 0003  
                  wtemp0 004E          __initialization 000E             __end_of_main 00C1  
                 ??_main 0021                   _TRISA0 0428                   _TRISA1 0429  
                 _TRISA2 042A                   _my_ISR 0017                   _millis 0010  
                 saved_w 004E  __end_of__initialization 0015             __pidataBANK0 00C9  
         _OPTION_REGbits 0081               __pbssBANK0 000C               __pmaintext 0081  
             __pintentry 0004                  ?_my_ISR 0018                  __ptext1 0017  
                clrloop0 00C2     end_of_initialization 0015                _PORTAbits 0005  
         __end_of_my_ISR 0081      start_initialization 000E              __pdataBANK0 0026  
               ??_my_ISR 0018                ___latbits 0000            __pcstackBANK0 0018  
              __pnvBANK0 0024              _bit_counter 0014        interrupt_function 0004  
              clear_ram0 00C1               _INTCONbits 000B                 intlevel1 0000  
